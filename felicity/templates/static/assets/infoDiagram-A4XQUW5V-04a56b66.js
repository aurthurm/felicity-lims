import{_ as a,l as o,K as p,k as s,L as m}from"./DocumentEditor-38315b9c.js";import{p as n}from"./mermaid-parser.core-0793d4b1.js";import"./index-fa13e788.js";import"./string-6dabfbe0.js";import"./merge-9af0dc11.js";import"./_isIterateeCall-63f093c4.js";import"./isArray-513c67aa.js";import"./document.mutations-cce26b80.js";import"./ArrowLeftIcon-9a3cd842.js";import"./_baseForOwn-f09f6708.js";import"./_basePickBy-2590a61a.js";import"./_baseUniq-d37daefa.js";import"./toFinite-e1ccf554.js";import"./_baseSet-8f475b6b.js";import"./isString-5d6832c3.js";import"./clone-304ea981.js";var g={parse:a(async r=>{const t=await n("info",r);o.debug(t)},"parse")},v={version:m},d=a(()=>v.version,"getVersion"),c={getVersion:d},l=a((r,t,i)=>{o.debug(`rendering info diagram
`+r);const e=p(t);s(e,100,400,!0),e.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw"),f={draw:l},I={parser:g,db:c,renderer:f};export{I as diagram};
