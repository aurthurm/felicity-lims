import{_ as a,l as o,L as p,k as s,M as m}from"./DocumentEditor-e2a1bcbd.js";import{p as n}from"./mermaid-parser.core-a3e15fed.js";import"./index-f86d8273.js";import"./string-6dabfbe0.js";import"./merge-66d44e03.js";import"./_isIterateeCall-3ed5658a.js";import"./isArray-513c67aa.js";import"./document.mutations-b0086f55.js";import"./ArrowLeftIcon-c2e9d2ce.js";import"./_baseForOwn-0c538494.js";import"./_basePickBy-6e736934.js";import"./_baseUniq-be01e9e3.js";import"./toFinite-9ff521fb.js";import"./_baseSet-6d67a00a.js";import"./isString-d243093d.js";import"./clone-3a4eb68c.js";var g={parse:a(async r=>{const t=await n("info",r);o.debug(t)},"parse")},v={version:m.version},d=a(()=>v.version,"getVersion"),c={getVersion:d},l=a((r,t,i)=>{o.debug(`rendering info diagram
`+r);const e=p(t);s(e,100,400,!0),e.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw"),f={draw:l},I={parser:g,db:c,renderer:f};export{I as diagram};
