import{_ as a,l as o,L as p,k as s,M as n}from"./umo-editor-b9dc8cc6.js";import{p as m}from"./mermaid-parser.core-fbd0c90e.js";import"./index-6c3e61f6.js";import"./string-6dabfbe0.js";import"./merge-6ae761ca.js";import"./_isIterateeCall-168bf9da.js";import"./isArray-513c67aa.js";import"./_baseForOwn-c77b227b.js";import"./_basePickBy-b6f057a0.js";import"./_baseUniq-5997410a.js";import"./toFinite-646a260a.js";import"./_baseSet-a7b499dd.js";import"./isString-5adbb5c2.js";import"./clone-6da7845b.js";var g={parse:a(async r=>{const t=await m("info",r);o.debug(t)},"parse")},v={version:n.version},d=a(()=>v.version,"getVersion"),c={getVersion:d},l=a((r,t,i)=>{o.debug(`rendering info diagram
`+r);const e=p(t);s(e,100,400,!0),e.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw"),f={draw:l},A={parser:g,db:c,renderer:f};export{A as diagram};
