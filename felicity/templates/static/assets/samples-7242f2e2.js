import{u as Y,f as I,h as j,i as _,t as P,I as f,B,j as L}from"./index-54016222.js";import{C as V,a as x,R as M,b as N,P as Q,c as T,V as q,d as z,I as G}from"./analyses.mutations-fdbdb917.js";import{R as H,S as J}from"./storage.mutations-f3ea605c.js";function Z(){const c=Y(),{withClientMutation:n,withClientQuery:u}=I(),{toastSuccess:r,toastError:t,toastInfo:K,swalConfirm:o}=L(),w=j({samples:_(()=>c.getSamples)}),p=async a=>c.updateSamplesStatus(a),i=async a=>c.updateSampleStatus(a),d=async a=>c.updateSamples(a),S=async a=>c.addSampleClones(a),m=async a=>{a&&c.fetchAnalysisResultsForSample(a)},y=async a=>{try{if((await o("You want to cancel these samples","Are you sure?")).isConfirmed){const e=await n(V,{samples:a},"cancelSamples");e?.samples?.length>0&&(p(e.samples),i(e.samples[0]),e.samples.length===1&&m(e.samples[0].uid),r("Samples have been cancelled successfully"))}}catch(s){t(`Failed to cancel samples: ${s instanceof Error?s.message:"Unknown error"}`)}},h=async a=>{try{if((await o("You want to clone these samples","Are you sure?")).isConfirmed){const e=await n(x,{samples:a},"cloneSamples");e?.samples?.length>0&&(S(e.samples),r("Samples have been cloned successfully"))}}catch(s){t(`Failed to clone samples: ${s instanceof Error?s.message:"Unknown error"}`)}},g=async a=>{try{if((await o("You want to reinstate samples","Are you sure?")).isConfirmed){const e=await n(M,{samples:a},"reInstateSamples");e?.samples?.length>0&&(p(e.samples),i(e.samples[0]),e.samples.length===1&&m(e.samples[0].uid),r("Samples have been reinstated successfully"))}}catch(s){t(`Failed to reinstate samples: ${s instanceof Error?s.message:"Unknown error"}`)}},v=async a=>{try{if((await o("You want to receive samples","Are you sure?")).isConfirmed){const e=await n(N,{samples:a},"receiveSamples");e?.samples?.length>0&&(p(e.samples),i(e.samples[0]),e.samples.length===1&&m(e.samples[0].uid),r("Samples have been received successfully"))}}catch(s){t(`Failed to receive samples: ${s instanceof Error?s.message:"Unknown error"}`)}},b=async a=>{try{if((await o("You want to recover these samples from storage","Are you sure?")).isConfirmed){const e=await n(H,{sampleUids:a},"recoverSamples");e?.samples?.length>0&&(d(e.samples),e.samples.length===1&&m(e.samples[0].uid),r("Samples have been recovered successfully"))}}catch(s){t(`Failed to recover samples: ${s instanceof Error?s.message:"Unknown error"}`)}},C=async a=>{try{if((await o("You want to publish samples","Are you sure?")).isConfirmed){const e=await n(Q,{samples:a},"publishSamples");e?.message&&r(e.message)}}catch(s){t(`Failed to publish samples: ${s instanceof Error?s.message:"Unknown error"}`)}},k=async a=>{try{if((await o("You want to download PDFs","Are you sure?")).isConfirmed){const e=await u(f,{sampleIds:a},"impressReportsDownload");if(e){const l=document.createElement("a");l.href=`data:application/pdf;base64,${e}`,l.setAttribute("download","impress-report.pdf"),l.click(),r("Reports downloaded successfully")}}}catch(s){t(`Failed to download reports: ${s instanceof Error?s.message:"Unknown error"}`)}},A=async a=>{try{if((await o("You want to download this report","Are you sure?")).isConfirmed){const e=await u(f,{impressUid:a},"impressReportDownload");if(e){const l=document.createElement("a");l.href=`data:application/pdf;base64,${e}`,l.setAttribute("download","impress-report.pdf"),l.click(),r("Report downloaded successfully")}}}catch(s){t(`Failed to download report: ${s instanceof Error?s.message:"Unknown error"}`)}},E=async a=>{try{return await u(B,{sampleUids:a},"barcodeSamples")||[]}catch(s){return t(`Failed to generate barcodes: ${s instanceof Error?s.message:"Unknown error"}`),[]}},F=async a=>{try{if((await o("You want to print these samples","Are you sure?")).isConfirmed){const e=await n(T,{samples:a},"printSamples");e?.message&&r(e.message)}}catch(s){t(`Failed to print samples: ${s instanceof Error?s.message:"Unknown error"}`)}},D=async a=>{try{if((await o("You want to verify these samples","Are you sure?")).isConfirmed){const e=await n(q,{samples:a},"verifySamples");e?.samples?.length>0&&(p(e.samples),i(e.samples[0]),e.samples.length===1&&m(e.samples[0].uid),r("Samples have been verified successfully"))}}catch(s){t(`Failed to verify samples: ${s instanceof Error?s.message:"Unknown error"}`)}},$=async a=>{try{if((await o("You want to reject these samples","Are you sure?")).isConfirmed){const e=await n(z,{samples:a},"rejectSamples");e?.message&&r(e.message)}}catch(s){t(`Failed to reject samples: ${s instanceof Error?s.message:"Unknown error"}`)}},U=async a=>{try{if((await o("You want to invalidate these samples","Are you sure?")).isConfirmed){const e=await n(G,{samples:a},"invalidateSamples");if(e?.samples?.length>0)return p(e.samples),i(e.samples[0]),e.samples.length===1&&m(e.samples[0].uid),r("Samples have been invalidated successfully"),e.samples}return[]}catch(s){return t(`Failed to invalidate samples: ${s instanceof Error?s.message:"Unknown error"}`),[]}},R=async a=>{try{if((await o("You want to store these samples","Are you sure?")).isConfirmed){const e=await n(J,{payload:a},"storeSamples");if(e?.samples?.length>0)return d(e.samples),r("Samples have been stored successfully"),e.samples}return[]}catch(s){return t(`Failed to store samples: ${s instanceof Error?s.message:"Unknown error"}`),[]}};return{...P(w),cancelSamples:y,cloneSamples:h,reInstateSamples:g,receiveSamples:v,recoverSamples:b,publishSamples:C,downloadSamplesImpress:k,downloadImpress:A,barcodeSamples:E,printSamples:F,verifySamples:D,rejectSamples:$,invalidateSamples:U,storeSamples:R}}export{Z as u};
