import{_ as a,l as o,L as p,k as s,M as n}from"./umo-editor-5f721446.js";import{p as m}from"./mermaid-parser.core-4c5cd5ed.js";import"./index-54016222.js";import"./string-6dabfbe0.js";import"./merge-cf81c653.js";import"./_isIterateeCall-77d89b8a.js";import"./isArray-513c67aa.js";import"./_baseForOwn-47127574.js";import"./_basePickBy-b9af1b18.js";import"./_baseUniq-b54e7e7d.js";import"./toFinite-29f9859a.js";import"./_baseSet-572e3577.js";import"./isString-bdefd96f.js";import"./clone-6fff1e0d.js";var g={parse:a(async r=>{const t=await m("info",r);o.debug(t)},"parse")},v={version:n.version},d=a(()=>v.version,"getVersion"),c={getVersion:d},l=a((r,t,i)=>{o.debug(`rendering info diagram
`+r);const e=p(t);s(e,100,400,!0),e.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw"),f={draw:l},A={parser:g,db:c,renderer:f};export{A as diagram};
