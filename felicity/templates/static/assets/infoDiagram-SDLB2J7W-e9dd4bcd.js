import{_ as a,l as o,L as p,k as s,M as n}from"./umo-editor-ed0e3b62.js";import{p as m}from"./mermaid-parser.core-8231ee3f.js";import"./index-8d0a01b3.js";import"./string-6dabfbe0.js";import"./merge-34fa6892.js";import"./_isIterateeCall-74b96bd5.js";import"./isArray-513c67aa.js";import"./_baseForOwn-ca0c9686.js";import"./_basePickBy-79303396.js";import"./_baseUniq-0ae5c3f8.js";import"./toFinite-bf247c65.js";import"./_baseSet-ee96292e.js";import"./isString-71c81442.js";import"./clone-e601fb60.js";var g={parse:a(async r=>{const t=await m("info",r);o.debug(t)},"parse")},v={version:n.version},d=a(()=>v.version,"getVersion"),c={getVersion:d},l=a((r,t,i)=>{o.debug(`rendering info diagram
`+r);const e=p(t);s(e,100,400,!0),e.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw"),f={draw:l},A={parser:g,db:c,renderer:f};export{A as diagram};
