import{f as o,d as c,G as d,k as f,l as u,m as y,n as h,p as g,q as p,s as v,v as A,w as m,x as I}from"./index-9a11e11f.js";const{withClientQuery:r}=o();function t(e,s){const i=e.findIndex(n=>n.uid===s.uid);i!==-1&&(e[i]=s)}const C=c("analysis",{state:()=>({codingStandards:[],fetchingCodingStandards:!1,analysesCategories:[],analysesServices:[],analysesMappings:[],analysesProfiles:[],analysesTemplates:[],profileMappings:[],qcLevels:[],qcTemplates:[],rejectionReasons:[]}),getters:{getCodingStandards:e=>e.codingStandards,getAnalysesCategories:e=>e.analysesCategories,getAnalysesServices:e=>{const s=e.analysesServices;if(s?.length>0){const i=s?.reduce((n,l)=>{const a=l?.category?.name||"No Category";return n[a]=n[a]||[],n[a].push(l),n},{});return Object.entries(i||{}).sort()}else return[]},getAnalysesServicesSimple:e=>e.analysesServices,analysesMapings:e=>e.analysesMappings,getAnalysesProfiles:e=>e.analysesProfiles,getAnalysesTemplates:e=>e.analysesTemplates,profileMapings:e=>e.profileMappings,getQCLevels:e=>e.qcLevels,getQCTemplates:e=>e.qcTemplates,getRejectionReasons:e=>e.rejectionReasons},actions:{async fetchCodingStandards(){try{this.fetchingCodingStandards=!0;const e=await r(d,{},"codingStandardAll");e&&Array.isArray(e)?this.codingStandards=e:console.error("Invalid coding standards data received:",e)}catch(e){console.error("Error fetching coding standards:",e)}finally{this.fetchingCodingStandards=!1}},updateCodingStandard(e){if(!e?.uid){console.error("Invalid coding standard payload:",e);return}t(this.codingStandards,e)},addCodingStandard(e){if(!e?.uid){console.error("Invalid coding standard payload:",e);return}this.codingStandards?.unshift(e)},async fetchAnalysesCategories(){try{const e=await r(f,{},"analysisCategoryAll");e&&Array.isArray(e)?this.analysesCategories=e:console.error("Invalid analysis categories data received:",e)}catch(e){console.error("Error fetching analysis categories:",e)}},updateAnalysisCategory(e){if(!e?.uid){console.error("Invalid analysis category payload:",e);return}t(this.analysesCategories,e)},addAnalysisCategory(e){if(!e?.uid){console.error("Invalid analysis category payload:",e);return}this.analysesCategories?.unshift(e)},async fetchAnalysesServices(e){try{const s=await r(u,e,"analysisAll");s&&typeof s=="object"&&"items"in s?this.analysesServices=s.items||[]:console.error("Invalid analysis services data received:",s)}catch(s){console.error("Error fetching analysis services:",s)}},updateAnalysisService(e){if(!e?.uid){console.error("Invalid analysis service payload:",e);return}t(this.analysesServices,e)},addAnalysesService(e){if(!e?.uid){console.error("Invalid analysis service payload:",e);return}this.analysesServices?.unshift(e)},async fetchAnalysesProfilesAndServices(){try{const e=await r(y,{},void 0);if(e&&typeof e=="object"){if("profileAll"in e&&(this.analysesProfiles=e.profileAll),"analysisAll"in e){const s=e.analysisAll;this.analysesServices=s?.items}}else console.error("Invalid profiles and services data received:",e)}catch(e){console.error("Error fetching profiles and services:",e)}},async fetchAnalysesMappings(e){if(!e){console.error("Invalid profile UID provided to fetchAnalysesMappings");return}try{const s=await r(h,{uid:e},"analysisMappingsByAnalysis");s&&Array.isArray(s)?this.analysesMappings=s:console.error("Invalid analysis mappings data received:",s)}catch(s){console.error("Error fetching analysis mappings:",s)}},addAnalysesMapping(e){if(!e?.uid){console.error("Invalid analysis mapping payload:",e);return}this.analysesMappings?.unshift(e)},updateAnalysesMapping(e){if(!e?.uid){console.error("Invalid analysis mapping payload:",e);return}t(this.analysesMappings,e)},async fetchAnalysesProfiles(){try{const e=await r(g,{},"profileAll");e&&Array.isArray(e)?this.analysesProfiles=e:console.error("Invalid analysis profiles data received:",e)}catch(e){console.error("Error fetching analysis profiles:",e)}},updateAnalysesProfile(e){if(!e?.uid){console.error("Invalid analysis profile payload:",e);return}t(this.analysesProfiles,e)},addAnalysisProfile(e){if(!e?.uid){console.error("Invalid analysis profile payload:",e);return}this.analysesProfiles.unshift(e)},async fetchProfileMappings(e){if(!e){console.error("Invalid profile UID provided to fetchProfileMappings");return}try{const s=await r(p,{uid:e},"profileMappingsByProfile");s&&Array.isArray(s)?this.profileMappings=s:console.error("Invalid profile mappings data received:",s)}catch(s){console.error("Error fetching profile mappings:",s)}},addProfileMapping(e){if(!e?.uid){console.error("Invalid profile mapping payload:",e);return}this.profileMappings?.unshift(e)},updateProfileMapping(e){if(!e?.uid){console.error("Invalid profile mapping payload:",e);return}t(this.profileMappings,e)},async fetchAnalysesTemplates(){try{const e=await r(v,{},"analysisTemplateAll");e&&Array.isArray(e)?this.analysesTemplates=e:console.error("Invalid analysis templates data received:",e)}catch(e){console.error("Error fetching analysis templates:",e)}},updateAnalysesTemplate(e){if(!e?.uid){console.error("Invalid analysis template payload:",e);return}t(this.analysesTemplates,e)},addAnalysisTemplate(e){if(!e?.uid){console.error("Invalid analysis template payload:",e);return}this.analysesTemplates.unshift(e)},async fetchQCLevels(){try{const e=await r(A,{},"qcLevelAll");e&&Array.isArray(e)?this.qcLevels=e:console.error("Invalid QC levels data received:",e)}catch(e){console.error("Error fetching QC levels:",e)}},updateQcLevel(e){if(!e?.uid){console.error("Invalid QC level payload:",e);return}t(this.qcLevels,e)},addQcLevel(e){if(!e?.uid){console.error("Invalid QC level payload:",e);return}this.qcLevels.unshift(e)},async fetchQCTemplates(){try{const e=await r(m,{},"qcTemplateAll");e&&Array.isArray(e)?this.qcTemplates=e.map(s=>(s.qcLevels=s?.qcLevels||[],s.departments=s?.departments||[],s)):console.error("Invalid QC templates data received:",e)}catch(e){console.error("Error fetching QC templates:",e)}},updateQcTemplate(e){if(!e?.uid){console.error("Invalid QC template payload:",e);return}const s=this.qcTemplates.findIndex(i=>i.uid===e.uid);s>-1&&(e.qcLevels=e?.qcLevels||[],e.departments=e?.departments||[],this.qcTemplates[s]=e)},addQcTemplate(e){if(!e?.uid){console.error("Invalid QC template payload:",e);return}e.qcLevels=e?.qcLevels||[],e.departments=e?.departments||[],this.qcTemplates.unshift(e)},addResultOption(e){if(!e?.uid||!e?.analysisUid){console.error("Invalid result option payload:",e);return}this.analysesServices?.forEach(s=>{s?.uid===e?.analysisUid&&(s?.resultOptions?s.resultOptions.push(e):s.resultOptions=[e])})},updateResultOption(e){if(!e?.uid||!e?.analysisUid){console.error("Invalid result option payload:",e);return}this.analysesServices?.forEach(s=>{if(s?.uid===e?.analysisUid){const i=s.resultOptions?.findIndex(n=>n.uid===e.uid);i!==void 0&&i>-1&&s.resultOptions&&(s.resultOptions[i]=e)}})},addAnalysisInterim(e){if(!e?.uid||!e?.analysisUid){console.error("Invalid analysis interim payload:",e);return}this.analysesServices?.forEach(s=>{s?.uid===e?.analysisUid&&(s?.interims?s.interims.push(e):s.interims=[e])})},updateAnalysisInterim(e){if(!e?.uid||!e?.analysisUid){console.error("Invalid analysis interim payload:",e);return}this.analysesServices?.forEach(s=>{if(s?.uid===e?.analysisUid){const i=s.interims?.findIndex(n=>n.uid===e.uid);i!==void 0&&i>-1&&s.interims&&(s.interims[i]=e)}})},addAnalysisCorrectionFactor(e){if(!e?.uid||!e?.analysisUid){console.error("Invalid analysis correction factor payload:",e);return}this.analysesServices?.forEach(s=>{s?.uid===e?.analysisUid&&(s?.correctionFactors?s.correctionFactors.push(e):s.correctionFactors=[e])})},updateAnalysisCorrectionFactor(e){if(!e?.uid||!e?.analysisUid){console.error("Invalid analysis correction factor payload:",e);return}this.analysesServices?.forEach(s=>{if(s?.uid===e?.analysisUid){const i=s.correctionFactors?.findIndex(n=>n.uid===e.uid);i!==void 0&&i>-1&&s.correctionFactors&&(s.correctionFactors[i]=e)}})},addAnalysisDetectionLimit(e){if(!e?.uid||!e?.analysisUid){console.error("Invalid analysis detection limit payload:",e);return}this.analysesServices?.forEach(s=>{s?.uid===e?.analysisUid&&(s?.detectionLimits?s.detectionLimits.push(e):s.detectionLimits=[e])})},updateAnalysisDetectionLimit(e){if(!e?.uid||!e?.analysisUid){console.error("Invalid analysis detection limit payload:",e);return}this.analysesServices?.forEach(s=>{if(s?.uid===e?.analysisUid){const i=s.detectionLimits?.findIndex(n=>n.uid===e.uid);i!==void 0&&i>-1&&s.detectionLimits&&(s.detectionLimits[i]=e)}})},addAnalysisUncertainty(e){if(!e?.uid||!e?.analysisUid){console.error("Invalid analysis uncertainty payload:",e);return}this.analysesServices?.forEach(s=>{s?.uid===e?.analysisUid&&(s?.uncertainties?s.uncertainties.push(e):s.uncertainties=[e])})},updateAnalysisUncertainty(e){if(!e?.uid||!e?.analysisUid){console.error("Invalid analysis uncertainty payload:",e);return}this.analysesServices?.forEach(s=>{if(s?.uid===e?.analysisUid){const i=s.uncertainties?.findIndex(n=>n.uid===e.uid);i!==void 0&&i>-1&&s.uncertainties&&(s.uncertainties[i]=e)}})},addAnalysisSpecification(e){if(!e?.uid||!e?.analysisUid){console.error("Invalid analysis specification payload:",e);return}this.analysesServices?.forEach(s=>{s?.uid===e?.analysisUid&&(s?.specifications?s.specifications.push(e):s.specifications=[e])})},updateAnalysisSpecification(e){if(!e?.uid||!e?.analysisUid){console.error("Invalid analysis specification payload:",e);return}this.analysesServices?.forEach(s=>{if(s?.uid===e?.analysisUid){const i=s.specifications?.findIndex(n=>n.uid===e.uid);i!==void 0&&i>-1&&s.specifications&&(s.specifications[i]=e)}})},async fetchRejectionReasons(){try{const e=await r(I,{},"rejectionReasonsAll");e&&Array.isArray(e)?this.rejectionReasons=e:console.error("Invalid rejection reasons data received:",e)}catch(e){console.error("Error fetching rejection reasons:",e)}},updateRejectionReason(e){if(!e?.uid){console.error("Invalid rejection reason payload:",e);return}t(this.rejectionReasons,e)},addRejectionReason(e){if(!e?.uid){console.error("Invalid rejection reason payload:",e);return}this.rejectionReasons.unshift(e)}}});export{C as u};
