import{_ as a,l as o,L as p,k as s,M as n}from"./umo-editor-d96e50d0.js";import{p as m}from"./mermaid-parser.core-dd9339fc.js";import"./index-628f1f8f.js";import"./string-6dabfbe0.js";import"./merge-7b43ed1c.js";import"./_isIterateeCall-a5b9a491.js";import"./isArray-513c67aa.js";import"./_baseForOwn-722c92e8.js";import"./_basePickBy-403f0e1c.js";import"./_baseUniq-da88b24e.js";import"./toFinite-7d9090c1.js";import"./_baseSet-dfdad323.js";import"./isString-0ed7bec4.js";import"./clone-4446d02a.js";var g={parse:a(async r=>{const t=await m("info",r);o.debug(t)},"parse")},v={version:n.version},d=a(()=>v.version,"getVersion"),c={getVersion:d},l=a((r,t,i)=>{o.debug(`rendering info diagram
`+r);const e=p(t);s(e,100,400,!0),e.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw"),f={draw:l},A={parser:g,db:c,renderer:f};export{A as diagram};
