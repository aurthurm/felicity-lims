import{_ as a,l as o,L as p,k as s,M as m}from"./DocumentEditor-6f52c685.js";import{p as n}from"./mermaid-parser.core-e09e9cff.js";import"./index-66877f9a.js";import"./string-6dabfbe0.js";import"./merge-6ef2e2dc.js";import"./_isIterateeCall-7f2e02ef.js";import"./isArray-513c67aa.js";import"./document.mutations-c5b32263.js";import"./ArrowLeftIcon-30ad69f1.js";import"./_baseForOwn-9b8e6a28.js";import"./_basePickBy-6108b94f.js";import"./_baseUniq-c455ad57.js";import"./toFinite-2c528053.js";import"./_baseSet-b6e43a28.js";import"./isString-c099cfb3.js";import"./clone-017116fb.js";var g={parse:a(async r=>{const t=await n("info",r);o.debug(t)},"parse")},v={version:m.version},d=a(()=>v.version,"getVersion"),c={getVersion:d},l=a((r,t,i)=>{o.debug(`rendering info diagram
`+r);const e=p(t);s(e,100,400,!0),e.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw"),f={draw:l},I={parser:g,db:c,renderer:f};export{I as diagram};
