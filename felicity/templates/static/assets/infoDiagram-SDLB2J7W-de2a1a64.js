import{_ as a,l as o,L as p,k as s,M as n}from"./umo-editor-34d3b1bf.js";import{p as m}from"./mermaid-parser.core-5a2cbaff.js";import"./index-93739211.js";import"./string-6dabfbe0.js";import"./merge-e828024a.js";import"./_isIterateeCall-55fac397.js";import"./isArray-513c67aa.js";import"./_baseForOwn-5f1ab8a8.js";import"./_basePickBy-c0689d4a.js";import"./_baseUniq-892e2222.js";import"./toFinite-b25d55f2.js";import"./_baseSet-5e4485cc.js";import"./isString-990f006b.js";import"./clone-66f8c967.js";var g={parse:a(async r=>{const t=await m("info",r);o.debug(t)},"parse")},v={version:n.version},d=a(()=>v.version,"getVersion"),c={getVersion:d},l=a((r,t,i)=>{o.debug(`rendering info diagram
`+r);const e=p(t);s(e,100,400,!0),e.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw"),f={draw:l},A={parser:g,db:c,renderer:f};export{A as diagram};
