import{_ as a,l as o,L as p,k as s,M as m}from"./DocumentEditor-e6d22b37.js";import{p as n}from"./mermaid-parser.core-b76e0ecb.js";import"./index-e1b11e1a.js";import"./string-6dabfbe0.js";import"./merge-4684064e.js";import"./_isIterateeCall-835c93cf.js";import"./isArray-513c67aa.js";import"./document.mutations-ca85e8c4.js";import"./ArrowLeftIcon-c446fef4.js";import"./_baseForOwn-21a78ff7.js";import"./_basePickBy-6b910d8d.js";import"./_baseUniq-5981645f.js";import"./toFinite-97f3185b.js";import"./_baseSet-8757ebd9.js";import"./isString-3d603514.js";import"./clone-11581bf9.js";var g={parse:a(async r=>{const t=await n("info",r);o.debug(t)},"parse")},v={version:m.version},d=a(()=>v.version,"getVersion"),c={getVersion:d},l=a((r,t,i)=>{o.debug(`rendering info diagram
`+r);const e=p(t);s(e,100,400,!0),e.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw"),f={draw:l},I={parser:g,db:c,renderer:f};export{I as diagram};
