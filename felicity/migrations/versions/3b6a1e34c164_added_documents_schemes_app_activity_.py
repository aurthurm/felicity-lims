"""added documents, schemes, app activity tracker

Revision ID: 3b6a1e34c164
Revises: cccb8d8adce5
Create Date: 2025-03-16 17:36:18.285084

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3b6a1e34c164'
down_revision = 'cccb8d8adce5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('abx_antibiotic',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('whonet_abx_code', sa.String(), nullable=True),
    sa.Column('who_code', sa.String(), nullable=True),
    sa.Column('din_code', sa.String(), nullable=True),
    sa.Column('jac_code', sa.String(), nullable=True),
    sa.Column('eucast_code', sa.String(), nullable=True),
    sa.Column('user_code', sa.String(), nullable=True),
    sa.Column('abx_number', sa.String(), nullable=True),
    sa.Column('potency', sa.String(), nullable=True),
    sa.Column('atc_code', sa.String(), nullable=True),
    sa.Column('class', sa.String(), nullable=True),
    sa.Column('subclass', sa.String(), nullable=True),
    sa.Column('prof_class', sa.String(), nullable=True),
    sa.Column('cia_category', sa.String(), nullable=True),
    sa.Column('clsi_order', sa.String(), nullable=True),
    sa.Column('eucast_order', sa.String(), nullable=True),
    sa.Column('human', sa.Boolean(), nullable=True),
    sa.Column('veterinary', sa.Boolean(), nullable=True),
    sa.Column('animal_gp', sa.String(), nullable=True),
    sa.Column('loinccomp', sa.String(), nullable=True),
    sa.Column('loincgen', sa.String(), nullable=True),
    sa.Column('loincdisk', sa.String(), nullable=True),
    sa.Column('loincmic', sa.String(), nullable=True),
    sa.Column('loincetest', sa.String(), nullable=True),
    sa.Column('loincslow', sa.String(), nullable=True),
    sa.Column('loincafb', sa.String(), nullable=True),
    sa.Column('loincsbt', sa.String(), nullable=True),
    sa.Column('loincmlc', sa.String(), nullable=True),
    sa.Column('comments', sa.String(length=500), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_antibiotic_uid'), 'abx_antibiotic', ['uid'], unique=False)
    op.create_table('abx_ast_panel',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_abx_ast_panel_uid'), 'abx_ast_panel', ['uid'], unique=False)
    op.create_table('abx_breakpoint_type',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_breakpoint_type_uid'), 'abx_breakpoint_type', ['uid'], unique=False)
    op.create_table('abx_expert_interpret_rule',
    sa.Column('rule_code', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('organism_code', sa.String(length=50), nullable=False),
    sa.Column('organism_code_type', sa.String(length=50), nullable=False),
    sa.Column('rule_criteria', sa.String(), nullable=False),
    sa.Column('affected_antibiotics', sa.String(), nullable=False),
    sa.Column('antibiotic_exceptions', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_expert_interpret_rule_uid'), 'abx_expert_interpret_rule', ['uid'], unique=False)
    op.create_table('abx_guideline',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_guideline_uid'), 'abx_guideline', ['uid'], unique=False)
    op.create_table('abx_host',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_host_uid'), 'abx_host', ['uid'], unique=False)
    op.create_table('abx_infection_site',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_infection_site_uid'), 'abx_infection_site', ['uid'], unique=False)
    op.create_table('abx_kingdom',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_abx_kingdom_uid'), 'abx_kingdom', ['uid'], unique=False)
    op.create_table('abx_medium',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_medium_uid'), 'abx_medium', ['uid'], unique=False)
    op.create_table('abx_test_method',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_test_method_uid'), 'abx_test_method', ['uid'], unique=False)
    op.create_table('app_activity_logs',
    sa.Column('token_identifier', sa.String(length=255), nullable=False),
    sa.Column('path', sa.String(length=255), nullable=False),
    sa.Column('method', sa.String(length=10), nullable=False),
    sa.Column('query_params', sa.Text(), nullable=True),
    sa.Column('headers', sa.Text(), nullable=True),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('response_code', sa.Integer(), nullable=False),
    sa.Column('response_body', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=39), nullable=True),
    sa.Column('user_agent', sa.String(length=512), nullable=True),
    sa.Column('duration', sa.Float(), nullable=False),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_app_activity_logs_uid'), 'app_activity_logs', ['uid'], unique=False)
    op.create_table('document_category',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_document_category_uid'), 'document_category', ['uid'], unique=False)
    op.create_table('document_folder',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('parent_uid', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['parent_uid'], ['document_folder.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_document_folder_uid'), 'document_folder', ['uid'], unique=False)
    op.create_table('document_tag',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_document_tag_uid'), 'document_tag', ['uid'], unique=False)
    op.create_table('grind_label',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('category', sa.Enum('TICKET', name='labelcategory'), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_grind_label_uid'), 'grind_label', ['uid'], unique=False)
    op.create_table('grind_media',
    sa.Column('target', sa.Enum('ERRAND', name='mediatarget'), nullable=True),
    sa.Column('target_uid', sa.String(), nullable=True),
    sa.Column('destination', sa.String(), nullable=True),
    sa.Column('encoding', sa.String(), nullable=True),
    sa.Column('filename', sa.String(), nullable=True),
    sa.Column('mimetype', sa.String(), nullable=True),
    sa.Column('original_name', sa.String(), nullable=True),
    sa.Column('path', sa.String(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_grind_media_uid'), 'grind_media', ['uid'], unique=False)
    op.create_table('grind_occurrence',
    sa.Column('target', sa.Enum('ERRAND', 'MILESTONE', name='occurrencetarget'), nullable=True),
    sa.Column('target_uid', sa.String(), nullable=True),
    sa.Column('actor_uid', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['actor_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_grind_occurrence_uid'), 'grind_occurrence', ['uid'], unique=False)
    op.create_table('grind_scheme',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('assignee_uid', sa.String(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_grind_scheme_uid'), 'grind_scheme', ['uid'], unique=False)
    op.create_table('grind_stamp',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('category', sa.Enum('PROJECT', 'TICKET', name='stampcategory'), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_grind_stamp_uid'), 'grind_stamp', ['uid'], unique=False)
    op.create_table('abx_antibiotic_guideline',
    sa.Column('antibiotic_uid', sa.String(), nullable=False),
    sa.Column('guideline_uid', sa.String(), nullable=False),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['antibiotic_uid'], ['abx_antibiotic.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['guideline_uid'], ['abx_guideline.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_antibiotic_guideline_uid'), 'abx_antibiotic_guideline', ['uid'], unique=False)
    op.create_table('abx_expected_res_phenotype',
    sa.Column('guideline_uid', sa.String(), nullable=True),
    sa.Column('reference_table', sa.String(length=100), nullable=True),
    sa.Column('organism_code', sa.String(length=50), nullable=False),
    sa.Column('organism_code_type', sa.String(length=50), nullable=False),
    sa.Column('exception_organism_code', sa.String(length=50), nullable=True),
    sa.Column('exception_organism_code_type', sa.String(length=50), nullable=True),
    sa.Column('abx_code', sa.String(length=50), nullable=False),
    sa.Column('abx_code_type', sa.String(length=50), nullable=False),
    sa.Column('antibiotic_exceptions', sa.String(length=500), nullable=True),
    sa.Column('comments', sa.String(length=500), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['guideline_uid'], ['abx_guideline.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_expected_res_phenotype_uid'), 'abx_expected_res_phenotype', ['uid'], unique=False)
    op.create_table('abx_guideline_year',
    sa.Column('guideline_uid', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['guideline_uid'], ['abx_guideline.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_guideline_year_uid'), 'abx_guideline_year', ['uid'], unique=False)
    op.create_table('abx_laboratory_antibiotic',
    sa.Column('laboratory_uid', sa.String(), nullable=False),
    sa.Column('antibiotic_uid', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['antibiotic_uid'], ['abx_antibiotic.uid'], ),
    sa.ForeignKeyConstraint(['laboratory_uid'], ['laboratory.uid'], ),
    sa.PrimaryKeyConstraint('laboratory_uid', 'antibiotic_uid')
    )
    op.create_table('abx_panel_antibiotic',
    sa.Column('panel_uid', sa.String(), nullable=False),
    sa.Column('antibiotic_uid', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['antibiotic_uid'], ['abx_antibiotic.uid'], ),
    sa.ForeignKeyConstraint(['panel_uid'], ['abx_ast_panel.uid'], ),
    sa.PrimaryKeyConstraint('panel_uid', 'antibiotic_uid')
    )
    op.create_table('abx_phylum',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('kingdom_uid', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['kingdom_uid'], ['abx_kingdom.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_abx_phylum_uid'), 'abx_phylum', ['uid'], unique=False)
    op.create_table('abx_qc_ranges',
    sa.Column('guideline_uid', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('strain', sa.String(length=100), nullable=False),
    sa.Column('reference_table', sa.String(length=100), nullable=False),
    sa.Column('whonet_org_code', sa.String(length=50), nullable=False),
    sa.Column('antibiotic', sa.String(length=100), nullable=False),
    sa.Column('abx_test', sa.String(length=50), nullable=True),
    sa.Column('whonet_abx_code', sa.String(length=50), nullable=False),
    sa.Column('method', sa.String(length=100), nullable=False),
    sa.Column('medium_uid', sa.String(), nullable=True),
    sa.Column('minimum', sa.String(length=10), nullable=False),
    sa.Column('maximum', sa.String(length=10), nullable=False),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['guideline_uid'], ['abx_guideline.uid'], ),
    sa.ForeignKeyConstraint(['medium_uid'], ['abx_medium.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_qc_ranges_uid'), 'abx_qc_ranges', ['uid'], unique=False)
    op.create_table('document_template',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('category_uid', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category_uid'], ['document_category.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_document_template_uid'), 'document_template', ['uid'], unique=False)
    op.create_table('grind_board',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('scheme_uid', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['scheme_uid'], ['grind_scheme.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_grind_board_uid'), 'grind_board', ['uid'], unique=False)
    op.create_table('grind_scheme_member',
    sa.Column('grind_scheme_uid', sa.String(), nullable=True),
    sa.Column('user_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['grind_scheme_uid'], ['grind_scheme.uid'], ),
    sa.ForeignKeyConstraint(['user_uid'], ['user.uid'], )
    )
    op.create_table('abx_breakpoint',
    sa.Column('guideline_year_uid', sa.String(), nullable=True),
    sa.Column('test_method_uid', sa.String(), nullable=True),
    sa.Column('potency', sa.String(length=50), nullable=True),
    sa.Column('organism_code', sa.String(length=50), nullable=False),
    sa.Column('organism_code_type', sa.String(length=50), nullable=False),
    sa.Column('breakpoint_type_uid', sa.String(), nullable=True),
    sa.Column('host_uid', sa.String(), nullable=True),
    sa.Column('site_of_infection_uid', sa.String(), nullable=True),
    sa.Column('reference_table', sa.String(length=100), nullable=True),
    sa.Column('reference_sequence', sa.String(length=100), nullable=True),
    sa.Column('whonet_abx_code', sa.String(length=50), nullable=True),
    sa.Column('comments', sa.String(length=500), nullable=True),
    sa.Column('r', sa.String(length=20), nullable=True),
    sa.Column('i', sa.String(length=20), nullable=True),
    sa.Column('sdd', sa.String(length=20), nullable=True),
    sa.Column('s', sa.String(length=20), nullable=True),
    sa.Column('ecv_ecoff', sa.String(length=20), nullable=True),
    sa.Column('ecv_ecoff_tentative', sa.String(length=20), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['breakpoint_type_uid'], ['abx_breakpoint_type.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['guideline_year_uid'], ['abx_guideline_year.uid'], ),
    sa.ForeignKeyConstraint(['host_uid'], ['abx_host.uid'], ),
    sa.ForeignKeyConstraint(['site_of_infection_uid'], ['abx_infection_site.uid'], ),
    sa.ForeignKeyConstraint(['test_method_uid'], ['abx_test_method.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_breakpoint_uid'), 'abx_breakpoint', ['uid'], unique=False)
    op.create_table('abx_class',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('phylum_uid', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['phylum_uid'], ['abx_phylum.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_abx_class_uid'), 'abx_class', ['uid'], unique=False)
    op.create_table('document',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('subtitle', sa.String(), nullable=True),
    sa.Column('document_id', sa.String(), nullable=True),
    sa.Column('folder_uid', sa.String(), nullable=True),
    sa.Column('department_uid', sa.String(), nullable=True),
    sa.Column('category_uid', sa.String(), nullable=True),
    sa.Column('template_uid', sa.String(), nullable=True),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.Column('last_accessed_by_uid', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category_uid'], ['document_category.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['department_uid'], ['department.uid'], ),
    sa.ForeignKeyConstraint(['folder_uid'], ['document_folder.uid'], ),
    sa.ForeignKeyConstraint(['last_accessed_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['template_uid'], ['document_template.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('document_id')
    )
    op.create_index(op.f('ix_document_uid'), 'document', ['uid'], unique=False)
    op.create_table('grind_poster',
    sa.Column('category', sa.Enum('LISTING', 'ENGAGEMENT', 'TODO', 'MESSAGE', name='postercategory'), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('board_uid', sa.String(), nullable=True),
    sa.Column('assignee_uid', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['board_uid'], ['grind_board.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_grind_poster_uid'), 'grind_poster', ['uid'], unique=False)
    op.create_table('abx_order',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('class_uid', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['class_uid'], ['abx_class.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_abx_order_uid'), 'abx_order', ['uid'], unique=False)
    op.create_table('document_audit',
    sa.Column('document_uid', sa.String(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('user_uid', sa.String(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['document_uid'], ['document.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['user_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_document_audit_uid'), 'document_audit', ['uid'], unique=False)
    op.create_table('document_author',
    sa.Column('document_uid', sa.String(), nullable=False),
    sa.Column('user_uid', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['document_uid'], ['document.uid'], ),
    sa.ForeignKeyConstraint(['user_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('document_uid', 'user_uid')
    )
    op.create_table('document_reader',
    sa.Column('document_uid', sa.String(), nullable=False),
    sa.Column('user_uid', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['document_uid'], ['document.uid'], ),
    sa.ForeignKeyConstraint(['user_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('document_uid', 'user_uid')
    )
    op.create_table('document_relation',
    sa.Column('source_document_uid', sa.String(), nullable=False),
    sa.Column('target_document_uid', sa.String(), nullable=False),
    sa.Column('relation_type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['source_document_uid'], ['document.uid'], ),
    sa.ForeignKeyConstraint(['target_document_uid'], ['document.uid'], ),
    sa.PrimaryKeyConstraint('source_document_uid', 'target_document_uid')
    )
    op.create_table('document_review_cycle',
    sa.Column('document_uid', sa.String(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('initiated_by_uid', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['document_uid'], ['document.uid'], ),
    sa.ForeignKeyConstraint(['initiated_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_document_review_cycle_uid'), 'document_review_cycle', ['uid'], unique=False)
    op.create_table('document_status',
    sa.Column('document_uid', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'IN_REVIEW', 'APPROVED', 'PUBLISHED', 'ARCHIVED', 'RECALLED', 'EFFECTED', name='documentstate'), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('user_uid', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['document_uid'], ['document.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['user_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_document_status_uid'), 'document_status', ['uid'], unique=False)
    op.create_table('document_subscription',
    sa.Column('document_uid', sa.String(), nullable=True),
    sa.Column('user_uid', sa.String(), nullable=True),
    sa.Column('subscription_type', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['document_uid'], ['document.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['user_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_document_subscription_uid'), 'document_subscription', ['uid'], unique=False)
    op.create_table('document_tagged',
    sa.Column('document_uid', sa.String(), nullable=False),
    sa.Column('document_tag_uid', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['document_tag_uid'], ['document_tag.uid'], ),
    sa.ForeignKeyConstraint(['document_uid'], ['document.uid'], ),
    sa.PrimaryKeyConstraint('document_uid', 'document_tag_uid')
    )
    op.create_table('document_version',
    sa.Column('document_uid', sa.String(), nullable=True),
    sa.Column('version_number', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('editor', sa.String(length=20), nullable=True),
    sa.Column('change_summary', sa.String(), nullable=True),
    sa.Column('thumbnail', sa.Text(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['document_uid'], ['document.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_document_version_uid'), 'document_version', ['uid'], unique=False)
    op.create_table('grind_errand',
    sa.Column('category', sa.Enum('MESSAGE', 'ENGAGEMENT', 'TICKET', 'TODO', 'PROJECT', name='errandcategory'), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('label_uid', sa.String(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('poster_uid', sa.String(), nullable=True),
    sa.Column('reporter_uid', sa.String(), nullable=True),
    sa.Column('assignee_uid', sa.String(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['label_uid'], ['grind_label.uid'], ),
    sa.ForeignKeyConstraint(['poster_uid'], ['grind_poster.uid'], ),
    sa.ForeignKeyConstraint(['reporter_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_grind_errand_uid'), 'grind_errand', ['uid'], unique=False)
    op.create_table('grind_poster_member',
    sa.Column('grind_poster_uid', sa.String(), nullable=True),
    sa.Column('user_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['grind_poster_uid'], ['grind_poster.uid'], ),
    sa.ForeignKeyConstraint(['user_uid'], ['user.uid'], )
    )
    op.create_table('grind_poster_stamp',
    sa.Column('grind_poster_uid', sa.String(), nullable=True),
    sa.Column('grind_stamp_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['grind_poster_uid'], ['grind_poster.uid'], ),
    sa.ForeignKeyConstraint(['grind_stamp_uid'], ['grind_stamp.uid'], )
    )
    op.create_table('abx_family',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('order_uid', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['order_uid'], ['abx_order.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_abx_family_uid'), 'abx_family', ['uid'], unique=False)
    op.create_table('document_review_step',
    sa.Column('review_cycle_uid', sa.String(), nullable=True),
    sa.Column('reviewer_uid', sa.String(), nullable=True),
    sa.Column('sequence', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('action_date', sa.DateTime(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['review_cycle_uid'], ['document_review_cycle.uid'], ),
    sa.ForeignKeyConstraint(['reviewer_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_document_review_step_uid'), 'document_review_step', ['uid'], unique=False)
    op.create_table('grind_errand_discussion',
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('errand_uid', sa.String(), nullable=True),
    sa.Column('parent_uid', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['errand_uid'], ['grind_errand.uid'], ),
    sa.ForeignKeyConstraint(['parent_uid'], ['grind_errand_discussion.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_grind_errand_discussion_uid'), 'grind_errand_discussion', ['uid'], unique=False)
    op.create_table('grind_errand_member',
    sa.Column('grind_errand_uid', sa.String(), nullable=True),
    sa.Column('grind_user_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['grind_errand_uid'], ['grind_errand.uid'], ),
    sa.ForeignKeyConstraint(['grind_user_uid'], ['user.uid'], )
    )
    op.create_table('grind_errand_stamp',
    sa.Column('grind_errand_uid', sa.String(), nullable=True),
    sa.Column('grind_stamp_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['grind_errand_uid'], ['grind_errand.uid'], ),
    sa.ForeignKeyConstraint(['grind_stamp_uid'], ['grind_stamp.uid'], )
    )
    op.create_table('grind_milestone',
    sa.Column('errand_uid', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('complete', sa.Boolean(), nullable=True),
    sa.Column('assignee_uid', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['errand_uid'], ['grind_errand.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_grind_milestone_uid'), 'grind_milestone', ['uid'], unique=False)
    op.create_table('abx_genus',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('family_uid', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['family_uid'], ['abx_family.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_abx_genus_uid'), 'abx_genus', ['uid'], unique=False)
    op.create_table('abx_organism',
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('whonet_org_code', sa.String(length=50), nullable=True),
    sa.Column('replaced_by', sa.String(length=50), nullable=True),
    sa.Column('taxonomic_status', sa.String(length=50), nullable=True),
    sa.Column('common', sa.String(length=100), nullable=True),
    sa.Column('organism_type', sa.String(length=50), nullable=True),
    sa.Column('anaerobe', sa.Boolean(), nullable=True),
    sa.Column('morphology', sa.String(length=100), nullable=True),
    sa.Column('subkingdom_code', sa.String(length=50), nullable=True),
    sa.Column('family_code', sa.String(length=50), nullable=True),
    sa.Column('genus_group', sa.String(length=100), nullable=True),
    sa.Column('genus_code', sa.String(length=50), nullable=True),
    sa.Column('species_group', sa.String(length=100), nullable=True),
    sa.Column('serovar_group', sa.String(length=100), nullable=True),
    sa.Column('msf_grp_clin', sa.String(length=50), nullable=True),
    sa.Column('sct_code', sa.String(length=50), nullable=True),
    sa.Column('sct_text', sa.String(length=100), nullable=True),
    sa.Column('gbif_taxon_id', sa.String(length=100), nullable=True),
    sa.Column('gbif_dataset_id', sa.String(length=255), nullable=True),
    sa.Column('gbif_taxonomic_status', sa.String(length=50), nullable=True),
    sa.Column('kingdom_uid', sa.String(), nullable=True),
    sa.Column('phylum_uid', sa.String(), nullable=True),
    sa.Column('class_uid', sa.String(), nullable=True),
    sa.Column('order_uid', sa.String(), nullable=True),
    sa.Column('family_uid', sa.String(), nullable=True),
    sa.Column('genus_uid', sa.String(), nullable=True),
    sa.Column('comments', sa.String(length=500), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['class_uid'], ['abx_class.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['family_uid'], ['abx_family.uid'], ),
    sa.ForeignKeyConstraint(['genus_uid'], ['abx_genus.uid'], ),
    sa.ForeignKeyConstraint(['kingdom_uid'], ['abx_kingdom.uid'], ),
    sa.ForeignKeyConstraint(['order_uid'], ['abx_order.uid'], ),
    sa.ForeignKeyConstraint(['phylum_uid'], ['abx_phylum.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_organism_uid'), 'abx_organism', ['uid'], unique=False)
    op.create_table('abx_organism_serotypes',
    sa.Column('organism_uid', sa.String(), nullable=False),
    sa.Column('serotype', sa.String(length=100), nullable=False),
    sa.Column('serogroup', sa.String(length=100), nullable=True),
    sa.Column('subspecies', sa.String(length=100), nullable=True),
    sa.Column('o_antigens', sa.String(length=100), nullable=True),
    sa.Column('h_phase_1', sa.String(length=100), nullable=True),
    sa.Column('h_phase_2', sa.String(length=100), nullable=True),
    sa.Column('x997_check', sa.String(length=10), nullable=True),
    sa.Column('fate', sa.String(length=50), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['organism_uid'], ['abx_organism.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_organism_serotypes_uid'), 'abx_organism_serotypes', ['uid'], unique=False)
    op.create_table('abx_panel_organism',
    sa.Column('panel_uid', sa.String(), nullable=False),
    sa.Column('organism_uid', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['organism_uid'], ['abx_organism.uid'], ),
    sa.ForeignKeyConstraint(['panel_uid'], ['abx_ast_panel.uid'], ),
    sa.PrimaryKeyConstraint('panel_uid', 'organism_uid')
    )
    op.create_table('abx_organism_result',
    sa.Column('analysis_result_uid', sa.String(), nullable=True),
    sa.Column('organism_uid', sa.String(), nullable=True),
    sa.Column('isolate_number', sa.Integer(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_result_uid'], ['analysis_result.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['organism_uid'], ['abx_organism.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_organism_result_uid'), 'abx_organism_result', ['uid'], unique=False)
    op.create_table('abx_ast_result',
    sa.Column('organism_result_uid', sa.String(), nullable=True),
    sa.Column('analysis_result_uid', sa.String(), nullable=True),
    sa.Column('antibiotic_uid', sa.String(), nullable=True),
    sa.Column('guideline_year_uid', sa.String(), nullable=True),
    sa.Column('breakpoint_uid', sa.String(), nullable=True),
    sa.Column('ast_method_uid', sa.String(), nullable=True),
    sa.Column('ast_value', sa.String(length=10), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_result_uid'], ['analysis_result.uid'], ),
    sa.ForeignKeyConstraint(['antibiotic_uid'], ['abx_antibiotic.uid'], ),
    sa.ForeignKeyConstraint(['ast_method_uid'], ['abx_test_method.uid'], ),
    sa.ForeignKeyConstraint(['breakpoint_uid'], ['abx_breakpoint.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['guideline_year_uid'], ['abx_guideline_year.uid'], ),
    sa.ForeignKeyConstraint(['organism_result_uid'], ['abx_organism_result.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_abx_ast_result_uid'), 'abx_ast_result', ['uid'], unique=False)
    op.drop_index('analysis_result_level_idx', table_name='analysis_result')
    op.drop_index('analysis_result_lft_idx', table_name='analysis_result')
    op.drop_index('analysis_result_rgt_idx', table_name='analysis_result')
    op.create_index(op.f('ix_analysis_result_level'), 'analysis_result', ['level'], unique=False)
    op.create_index(op.f('ix_analysis_result_lft'), 'analysis_result', ['lft'], unique=False)
    op.create_index(op.f('ix_analysis_result_rgt'), 'analysis_result', ['rgt'], unique=False)
    op.drop_index('message_level_idx', table_name='message')
    op.drop_index('message_lft_idx', table_name='message')
    op.drop_index('message_rgt_idx', table_name='message')
    op.create_index(op.f('ix_message_level'), 'message', ['level'], unique=False)
    op.create_index(op.f('ix_message_lft'), 'message', ['lft'], unique=False)
    op.create_index(op.f('ix_message_rgt'), 'message', ['rgt'], unique=False)
    op.drop_index('sample_level_idx', table_name='sample')
    op.drop_index('sample_lft_idx', table_name='sample')
    op.drop_index('sample_rgt_idx', table_name='sample')
    op.create_index(op.f('ix_sample_level'), 'sample', ['level'], unique=False)
    op.create_index(op.f('ix_sample_lft'), 'sample', ['lft'], unique=False)
    op.create_index(op.f('ix_sample_rgt'), 'sample', ['rgt'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sample_rgt'), table_name='sample')
    op.drop_index(op.f('ix_sample_lft'), table_name='sample')
    op.drop_index(op.f('ix_sample_level'), table_name='sample')
    op.create_index('sample_rgt_idx', 'sample', ['rgt'], unique=False)
    op.create_index('sample_lft_idx', 'sample', ['lft'], unique=False)
    op.create_index('sample_level_idx', 'sample', ['level'], unique=False)
    op.drop_index(op.f('ix_message_rgt'), table_name='message')
    op.drop_index(op.f('ix_message_lft'), table_name='message')
    op.drop_index(op.f('ix_message_level'), table_name='message')
    op.create_index('message_rgt_idx', 'message', ['rgt'], unique=False)
    op.create_index('message_lft_idx', 'message', ['lft'], unique=False)
    op.create_index('message_level_idx', 'message', ['level'], unique=False)
    op.drop_index(op.f('ix_analysis_result_rgt'), table_name='analysis_result')
    op.drop_index(op.f('ix_analysis_result_lft'), table_name='analysis_result')
    op.drop_index(op.f('ix_analysis_result_level'), table_name='analysis_result')
    op.create_index('analysis_result_rgt_idx', 'analysis_result', ['rgt'], unique=False)
    op.create_index('analysis_result_lft_idx', 'analysis_result', ['lft'], unique=False)
    op.create_index('analysis_result_level_idx', 'analysis_result', ['level'], unique=False)
    op.drop_index(op.f('ix_abx_ast_result_uid'), table_name='abx_ast_result')
    op.drop_table('abx_ast_result')
    op.drop_index(op.f('ix_abx_organism_result_uid'), table_name='abx_organism_result')
    op.drop_table('abx_organism_result')
    op.drop_table('abx_panel_organism')
    op.drop_index(op.f('ix_abx_organism_serotypes_uid'), table_name='abx_organism_serotypes')
    op.drop_table('abx_organism_serotypes')
    op.drop_index(op.f('ix_abx_organism_uid'), table_name='abx_organism')
    op.drop_table('abx_organism')
    op.drop_index(op.f('ix_abx_genus_uid'), table_name='abx_genus')
    op.drop_table('abx_genus')
    op.drop_index(op.f('ix_grind_milestone_uid'), table_name='grind_milestone')
    op.drop_table('grind_milestone')
    op.drop_table('grind_errand_stamp')
    op.drop_table('grind_errand_member')
    op.drop_index(op.f('ix_grind_errand_discussion_uid'), table_name='grind_errand_discussion')
    op.drop_table('grind_errand_discussion')
    op.drop_index(op.f('ix_document_review_step_uid'), table_name='document_review_step')
    op.drop_table('document_review_step')
    op.drop_index(op.f('ix_abx_family_uid'), table_name='abx_family')
    op.drop_table('abx_family')
    op.drop_table('grind_poster_stamp')
    op.drop_table('grind_poster_member')
    op.drop_index(op.f('ix_grind_errand_uid'), table_name='grind_errand')
    op.drop_table('grind_errand')
    op.drop_index(op.f('ix_document_version_uid'), table_name='document_version')
    op.drop_table('document_version')
    op.drop_table('document_tagged')
    op.drop_index(op.f('ix_document_subscription_uid'), table_name='document_subscription')
    op.drop_table('document_subscription')
    op.drop_index(op.f('ix_document_status_uid'), table_name='document_status')
    op.drop_table('document_status')
    op.drop_index(op.f('ix_document_review_cycle_uid'), table_name='document_review_cycle')
    op.drop_table('document_review_cycle')
    op.drop_table('document_relation')
    op.drop_table('document_reader')
    op.drop_table('document_author')
    op.drop_index(op.f('ix_document_audit_uid'), table_name='document_audit')
    op.drop_table('document_audit')
    op.drop_index(op.f('ix_abx_order_uid'), table_name='abx_order')
    op.drop_table('abx_order')
    op.drop_index(op.f('ix_grind_poster_uid'), table_name='grind_poster')
    op.drop_table('grind_poster')
    op.drop_index(op.f('ix_document_uid'), table_name='document')
    op.drop_table('document')
    op.drop_index(op.f('ix_abx_class_uid'), table_name='abx_class')
    op.drop_table('abx_class')
    op.drop_index(op.f('ix_abx_breakpoint_uid'), table_name='abx_breakpoint')
    op.drop_table('abx_breakpoint')
    op.drop_table('grind_scheme_member')
    op.drop_index(op.f('ix_grind_board_uid'), table_name='grind_board')
    op.drop_table('grind_board')
    op.drop_index(op.f('ix_document_template_uid'), table_name='document_template')
    op.drop_table('document_template')
    op.drop_index(op.f('ix_abx_qc_ranges_uid'), table_name='abx_qc_ranges')
    op.drop_table('abx_qc_ranges')
    op.drop_index(op.f('ix_abx_phylum_uid'), table_name='abx_phylum')
    op.drop_table('abx_phylum')
    op.drop_table('abx_panel_antibiotic')
    op.drop_table('abx_laboratory_antibiotic')
    op.drop_index(op.f('ix_abx_guideline_year_uid'), table_name='abx_guideline_year')
    op.drop_table('abx_guideline_year')
    op.drop_index(op.f('ix_abx_expected_res_phenotype_uid'), table_name='abx_expected_res_phenotype')
    op.drop_table('abx_expected_res_phenotype')
    op.drop_index(op.f('ix_abx_antibiotic_guideline_uid'), table_name='abx_antibiotic_guideline')
    op.drop_table('abx_antibiotic_guideline')
    op.drop_index(op.f('ix_grind_stamp_uid'), table_name='grind_stamp')
    op.drop_table('grind_stamp')
    op.drop_index(op.f('ix_grind_scheme_uid'), table_name='grind_scheme')
    op.drop_table('grind_scheme')
    op.drop_index(op.f('ix_grind_occurrence_uid'), table_name='grind_occurrence')
    op.drop_table('grind_occurrence')
    op.drop_index(op.f('ix_grind_media_uid'), table_name='grind_media')
    op.drop_table('grind_media')
    op.drop_index(op.f('ix_grind_label_uid'), table_name='grind_label')
    op.drop_table('grind_label')
    op.drop_index(op.f('ix_document_tag_uid'), table_name='document_tag')
    op.drop_table('document_tag')
    op.drop_index(op.f('ix_document_folder_uid'), table_name='document_folder')
    op.drop_table('document_folder')
    op.drop_index(op.f('ix_document_category_uid'), table_name='document_category')
    op.drop_table('document_category')
    op.drop_index(op.f('ix_app_activity_logs_uid'), table_name='app_activity_logs')
    op.drop_table('app_activity_logs')
    op.drop_index(op.f('ix_abx_test_method_uid'), table_name='abx_test_method')
    op.drop_table('abx_test_method')
    op.drop_index(op.f('ix_abx_medium_uid'), table_name='abx_medium')
    op.drop_table('abx_medium')
    op.drop_index(op.f('ix_abx_kingdom_uid'), table_name='abx_kingdom')
    op.drop_table('abx_kingdom')
    op.drop_index(op.f('ix_abx_infection_site_uid'), table_name='abx_infection_site')
    op.drop_table('abx_infection_site')
    op.drop_index(op.f('ix_abx_host_uid'), table_name='abx_host')
    op.drop_table('abx_host')
    op.drop_index(op.f('ix_abx_guideline_uid'), table_name='abx_guideline')
    op.drop_table('abx_guideline')
    op.drop_index(op.f('ix_abx_expert_interpret_rule_uid'), table_name='abx_expert_interpret_rule')
    op.drop_table('abx_expert_interpret_rule')
    op.drop_index(op.f('ix_abx_breakpoint_type_uid'), table_name='abx_breakpoint_type')
    op.drop_table('abx_breakpoint_type')
    op.drop_index(op.f('ix_abx_ast_panel_uid'), table_name='abx_ast_panel')
    op.drop_table('abx_ast_panel')
    op.drop_index(op.f('ix_abx_antibiotic_uid'), table_name='abx_antibiotic')
    op.drop_table('abx_antibiotic')
    # ### end Alembic commands ###
