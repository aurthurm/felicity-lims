version: '3.5'

services:

  felicity_fe:
    container_name: felicity_fe
    restart: unless-stopped
    build:
      context: ./
      target: webapp
      dockerfile: Dockerfile.dev
    volumes:
      - ./webapp:/app/webapp
    environment:
      - NODE_ENV=development
      - VITE_NODE_ENV=development
      - VITE_APP_TITLE=Felicity Dev
      - VITE_BASE_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - felicity_pg
    networks:
      - felicitynet
    command: bash -c "pnpm webapp:dev --host --port 3000"

  felicity_be:
    container_name: felicity_be
    restart: unless-stopped
    build:
      context: ./
      target: webapi
      dockerfile: Dockerfile.dev
    environment:
      - POSTGRES_SERVER=felicity_pg
      - POSTGRES_DB=felicity_lims
      - POSTGRES_USER=felicity
      - POSTGRES_PASSWORD=felicity
      - POSTGRES_HOST_AUTH_METHOD=trust
      - LOAD_SETUP_DATA=${LOAD_SETUP_DATA:-False}
      - SERVE_WEBAPP=${SERVE_WEBAPP:-False}
      - REDIS_SERVER=felicity_df:6379
      - MONGODB_SERVER=felicity_mg
      - MONGODB_USER=felicity
      - MONGODB_PASS=felicity
      - MINIO_SERVER=felicity_min:9000
      - MINIO_ACCESS=felicity
      - MINIO_SECRET=felicity
      - MEILISEARCH_SERVER=http://felicity_ms:7700
      - MEILISEARCH_API_KEY=http:api_key
    volumes:
      - ./felicity/:/app/felicity
    ports:
      - 8000:8000
    depends_on:
      - felicity_pg
    networks:
      - felicitynet
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: bash -c "cd felicity && alembic upgrade head && uvicorn main:felicity --host=0.0.0.0 --port=8000"

  felicity_min:
    container_name: felicity_min
    image: bitnami/minio:2024.7.31
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - felicitynet
    volumes:
      - 'minio_data:/data'
    environment:
      - MINIO_ROOT_USER=felicity
      - MINIO_ROOT_PASSWORD=felicity
      - MINIO_DEFAULT_BUCKET=felicity

  felicity_ms:
    container_name: felicity_ms
    image: getmeili/meilisearch:v1.8.4
    restart: unless-stopped
    volumes:
      - ./data.ms:/data.ms
    environment:
      - http_proxy
      - https_proxy
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-masterKey}
      - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS:-true}
      - MEILI_ENV=${MEILI_ENV:-development}
      - MEILI_LOG_LEVEL
      - MEILI_DB_PATH=${MEILI_DB_PATH:-/data.ms}
    ports:
      - ${MEILI_PORT:-7700}:7700
    networks:
      - felicitynet

  felicity_df:
    container_name: felicity_df
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
    # For better performance, consider `host` mode instead `port` to avoid docker NAT.
    # `host` mode is NOT currently supported in Swarm Mode.
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#network_mode
    # network_mode: "host"
    volumes:
      - dragonflydata:/data
    networks:
      - felicitynet

  felicity_pg:
    container_name: felicity_pg
    image: postgres:12
    restart: unless-stopped
    environment:
      - POSTGRES_DB=felicity_lims
      - POSTGRES_USER=felicity
      - POSTGRES_PASSWORD=felicity
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./services/postgres/init/:/docker-entrypoint-initdb.d/
      - pg-data:/var/lib/postgresql/data
    ports:
      - 5434:5432
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - felicitynet

  felicity_mg:
    container_name: felicity_mg
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: felicity
      MONGO_INITDB_ROOT_PASSWORD: felicity
    ports:
      - '27027:27017'
    networks:
      - felicitynet

  felicity_dg:
    container_name: felicity_dg
    image: dbgate/dbgate
    restart: always
    ports:
      - 8051:3000
    volumes:
      - dbgate-data:/root/.dbgate
    environment:
      LOGIN: felicity
      PASSWORD: felicity
      CONNECTIONS: pg,mg
      LABEL_pg: Felicity Postgres
      SERVER_pg: felicity_pg
      USER_pg: felicity
      PASSWORD_pg: felicity
      DATABASE_pg: felicity_lims
      PORT_pg: 5432
      ENGINE_pg: postgres@dbgate-plugin-postgres
      READONLY_pg: 1
      LABEL_mg: Felicity Mongo
      URL_mg: mongodb://felicity:felicity@felicity_mg:27017/
      DATABASE_mg: felicity
      ENGINE_mg: mongo@dbgate-plugin-mongo
      READONLY_mg: 1
    networks:
      - felicitynet

volumes:
  pg-data:
  pgadmin:
  minio_data:
  dragonflydata:
  dbgate-data:
    driver: local

networks:
  felicitynet:
    driver: bridge
