"""added sample storages

Revision ID: 102b0d144235
Revises: 12d845d3b4f3
Create Date: 2022-02-10 10:16:11.554015

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '102b0d144235'
down_revision = '12d845d3b4f3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('storeroom',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_storeroom_uid'), 'storeroom', ['uid'], unique=False)
    op.create_table('storagelocation',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('store_room_uid', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['store_room_uid'], ['storeroom.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_storagelocation_uid'), 'storagelocation', ['uid'], unique=False)
    op.create_table('storagesection',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('storage_location_uid', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['storage_location_uid'], ['storagelocation.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_storagesection_uid'), 'storagesection', ['uid'], unique=False)
    op.create_table('storagecontainer',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('storage_section_uid', sa.Integer(), nullable=False),
    sa.Column('grid', sa.Boolean(), nullable=True),
    sa.Column('row_wise', sa.Boolean(), nullable=True),
    sa.Column('columns', sa.Integer(), nullable=False),
    sa.Column('rows', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['storage_section_uid'], ['storagesection.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_storagecontainer_uid'), 'storagecontainer', ['uid'], unique=False)
    op.create_table('storageslot',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('storage_container_uid', sa.Integer(), nullable=False),
    sa.Column('position', sa.String(), nullable=False),
    sa.Column('sample_uid', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['sample_uid'], ['sample.uid'], ),
    sa.ForeignKeyConstraint(['storage_container_uid'], ['storagecontainer.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_storageslot_uid'), 'storageslot', ['uid'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_storageslot_uid'), table_name='storageslot')
    op.drop_table('storageslot')
    op.drop_index(op.f('ix_storagecontainer_uid'), table_name='storagecontainer')
    op.drop_table('storagecontainer')
    op.drop_index(op.f('ix_storagesection_uid'), table_name='storagesection')
    op.drop_table('storagesection')
    op.drop_index(op.f('ix_storagelocation_uid'), table_name='storagelocation')
    op.drop_table('storagelocation')
    op.drop_index(op.f('ix_storeroom_uid'), table_name='storeroom')
    op.drop_table('storeroom')
    # ### end Alembic commands ###
