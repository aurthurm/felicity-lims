"""added sampleinventory

Revision ID: ea82c8f0cf79
Revises: 102b0d144235
Create Date: 2022-02-10 10:21:09.460389

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = 'ea82c8f0cf79'
down_revision = '102b0d144235'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hazard',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_hazard_uid'), 'hazard', ['uid'], unique=False)
    op.create_table('stockcategory',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_stockcategory_uid'), 'stockcategory', ['uid'], unique=False)
    op.create_table('stockpackaging',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_stockpackaging_uid'), 'stockpackaging', ['uid'], unique=False)
    op.create_table('stockunit',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_stockunit_uid'), 'stockunit', ['uid'], unique=False)
    op.create_table('stockitem',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('department_uid', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['department_uid'], ['department.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_stockitem_uid'), 'stockitem', ['uid'], unique=False)
    op.create_table('stockorder',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_by_uid', sa.Integer(), nullable=True),
    sa.Column('department_uid', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('order_number', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['department_uid'], ['department.uid'], ),
    sa.ForeignKeyConstraint(['order_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_stockorder_uid'), 'stockorder', ['uid'], unique=False)
    op.create_table('stockproduct',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('department_uid', sa.Integer(), nullable=True),
    sa.Column('supplier_uid', sa.Integer(), nullable=True),
    sa.Column('category_uid', sa.Integer(), nullable=True),
    sa.Column('hazard_uid', sa.Integer(), nullable=True),
    sa.Column('store_room_uid', sa.Integer(), nullable=True),
    sa.Column('lot_number', sa.String(), nullable=False),
    sa.Column('batch', sa.String(), nullable=False),
    sa.Column('size', sa.Float(), nullable=False),
    sa.Column('unit_uid', sa.Integer(), nullable=True),
    sa.Column('packaging_uid', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('quantity_received', sa.Integer(), nullable=False),
    sa.Column('minimum_level', sa.Integer(), nullable=False),
    sa.Column('remaining', sa.Integer(), nullable=False),
    sa.Column('date_received', sa.DateTime(), nullable=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=False),
    sa.Column('received_by_uid', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_uid'], ['stockcategory.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['department_uid'], ['department.uid'], ),
    sa.ForeignKeyConstraint(['hazard_uid'], ['hazard.uid'], ),
    sa.ForeignKeyConstraint(['packaging_uid'], ['stockpackaging.uid'], ),
    sa.ForeignKeyConstraint(['received_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['store_room_uid'], ['storeroom.uid'], ),
    sa.ForeignKeyConstraint(['supplier_uid'], ['supplier.uid'], ),
    sa.ForeignKeyConstraint(['unit_uid'], ['stockunit.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_stockproduct_uid'), 'stockproduct', ['uid'], unique=False)
    op.create_table('stockadjustment',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_uid', sa.Integer(), nullable=True),
    sa.Column('adjustment_type', sa.String(), nullable=False),
    sa.Column('adjust', sa.Integer(), nullable=False),
    sa.Column('adjustment_date', sa.DateTime(), nullable=False),
    sa.Column('remarks', sa.String(), nullable=False),
    sa.Column('adjustment_by_uid', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['adjustment_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['product_uid'], ['stockproduct.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_stockadjustment_uid'), 'stockadjustment', ['uid'], unique=False)
    op.create_table('stockorderproduct',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_uid', sa.Integer(), nullable=True),
    sa.Column('order_uid', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['order_uid'], ['stockorder.uid'], ),
    sa.ForeignKeyConstraint(['product_uid'], ['stockproduct.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_stockorderproduct_uid'), 'stockorderproduct', ['uid'], unique=False)
    op.create_table('stocktransaction',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_uid', sa.Integer(), nullable=True),
    sa.Column('issued', sa.Integer(), nullable=False),
    sa.Column('department_uid', sa.Integer(), nullable=True),
    sa.Column('date_issued', sa.DateTime(), nullable=False),
    sa.Column('transaction_by_uid', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['department_uid'], ['department.uid'], ),
    sa.ForeignKeyConstraint(['product_uid'], ['stockproduct.uid'], ),
    sa.ForeignKeyConstraint(['transaction_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_stocktransaction_uid'), 'stocktransaction', ['uid'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stocktransaction_uid'), table_name='stocktransaction')
    op.drop_table('stocktransaction')
    op.drop_index(op.f('ix_stockorderproduct_uid'), table_name='stockorderproduct')
    op.drop_table('stockorderproduct')
    op.drop_index(op.f('ix_stockadjustment_uid'), table_name='stockadjustment')
    op.drop_table('stockadjustment')
    op.drop_index(op.f('ix_stockproduct_uid'), table_name='stockproduct')
    op.drop_table('stockproduct')
    op.drop_index(op.f('ix_stockorder_uid'), table_name='stockorder')
    op.drop_table('stockorder')
    op.drop_index(op.f('ix_stockitem_uid'), table_name='stockitem')
    op.drop_table('stockitem')
    op.drop_index(op.f('ix_stockunit_uid'), table_name='stockunit')
    op.drop_table('stockunit')
    op.drop_index(op.f('ix_stockpackaging_uid'), table_name='stockpackaging')
    op.drop_table('stockpackaging')
    op.drop_index(op.f('ix_stockcategory_uid'), table_name='stockcategory')
    op.drop_table('stockcategory')
    op.drop_index(op.f('ix_hazard_uid'), table_name='hazard')
    op.drop_table('hazard')
    # ### end Alembic commands ###
